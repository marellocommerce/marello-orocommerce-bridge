<div class="widget-content grid-widget-content">
    {% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}
    {% set gridName = 'marello-purchase-order-item-candidates' %}

    {% set params = {} %}

    {% set params = {
        'supplierId':       supplierId,
        '_parameters': {
            'data_in':     app.request.get('added') ? app.request.get('added')|split(',') : [],
            'data_not_in': app.request.get('removed') ? app.request.get('removed')|split(','): []
        }
    } %}

    <style type="text/css">
        .grid-widget-content .grid,
        .grid-widget-content .table {
            margin-bottom: 0;
        }
    </style>

    {% block content %}
        {{ dataGrid.renderGrid(gridName, params) }}
        <input type="hidden" name="appendProducts" id="appendProducts" value="{{ app.request.get('added') }}" />
        <input type="hidden" name="removeProducts" id="removeProducts" value="{{ app.request.get('removed') }}" />
    {% endblock %}

    <script type="text/javascript">
        {% set wid = app.request.get('_wid') %}
        require(['jquery', 'routing', 'orodatagrid/js/datagrid/listener/callback-listener', 'oroui/js/widget-manager',
            'oroform/js/multiple-entity/model', 'orolocale/js/formatter/name'],
        function($, routing, CallbackListener, WidgetManager, MultipleEntityModel, nameFormatter) {
            var addedModels = {};
            WidgetManager.getWidgetInstance({{ wid|json_encode|raw }}, function(widget) {
                widget.getAction('select', 'adopted', function(selectBtn) {
                    selectBtn.click(function() {
                        var addedVal = $('#appendProducts').val();
                        var removedVal = $('#removeProducts').val();
                        var appendedIds = addedVal.length ? addedVal.split(',') : [];
                        var removedIds = removedVal.length ? removedVal.split(',') : [];
                        widget.trigger('completeSelection', appendedIds, addedModels, removedIds);
                    });
                });
            });

            var gridName = {{ gridName|json_encode|raw }};

            $(function () {
                /** @type {orodatagrid.datagrid.listener.CallbackListener} */
                new CallbackListener({
                    $gridContainer: $('[data-wid="{{ wid }}"]'),
                    gridName: gridName,
                    dataField: 'id',
                    columnName: 'hasProduct',
                    processCallback: function (value, model, listener) {
                        var isActive = model.get(listener.columnName);
                        var id = model.get('id');
                        if (isActive) {
                            addedModels[id] = new MultipleEntityModel({
                                'id': model.get('id'),
                                'link': routing.generate('marello_product_view', {id: model.get('id')}),
                                'isDefault': false,
                                'label': 'product',
                                'value': model.get('sku') + ' - ' + model.get('name'),
                                'name': model.get('name'),
                                'sku': model.get('sku'),
                                'orderAmount': model.get('orderAmount'),
                                'purchasePrice': model.get('purchasePrice'),
                                'currency': '{{ currency }}'
                            });
                        } else if (addedModels.hasOwnProperty(id)) {
                            delete addedModels[id];
                        }
                    }
                });

            });
        });
    </script>

    <div class="widget-actions">
        <button type="reset" class="btn">{{ 'Cancel'|trans }}</button>
        <button type="button" class="btn btn-primary" data-action-name="select">{{ 'Select'|trans }}</button>
    </div>
</div>
